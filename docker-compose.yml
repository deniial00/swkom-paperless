version: '3.4'

services:
  proxy:
    container_name: swkom-proxy
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./NPaperless.P:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    restart: always
  database:
    container_name: swkom-db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: swkom-db
      POSTGRES_USER: swkom-db
      POSTGRES_PASSWORD: swkom-db
    ports:
      - "5432:5432"
    volumes:
      - ./dbData:/var/lib/postgresql/data
  api:
    image: swkom-api
    container_name: swkom-api
    build:
      context: .
      dockerfile: ./Dockerfile-API
      args:
        - configuration=Debug
    depends_on:
      - proxy
      - rabbit-mq
    ports:
      - 8080:8080
  worker:
    image: swkom-worker
    container_name: swkom-worker
    build:
      context: .
      dockerfile: ./Dockerfile-WORKER
      args:
        - configuration=Debug
  rabbit-mq:
    container_name: swkom-mq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: swkom-mq
      RABBITMQ_DEFAULT_PASS: swkom-mq
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
  minio:
    container_name: swkom-minio
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minioData:/data
    environment:
      MINIO_ROOT_USER: swkom-minio
      MINIO_ROOT_PASSWORD: swkom-minio
    command: server --console-address ":9001" /data
  elastic-search:
    container_name: swkom-elastic
    image: elasticsearch:8.7.1
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
      - "xpack.security.enrollment.enabled=false"
    ports:
      - 9200:9200
      - 9300:9300

volumes:
  dbData:
  minioData: